openapi: "3.0.3"
info:
  title: "SoccorsoWeb Services API"
  description: "API REST per la gestione di richieste di soccorso, missioni e operatori - Progetto Sviluppo Web Avanzato"
  version: "1.0.0"
  contact:
    name: "Shirotto"
    email: "shirotto@student.univaq.it"

servers:
  - url: "http://localhost:8080/soccorso-web/api"
    description: "Server di sviluppo locale"

tags:
  - name: "autenticazione"
    description: "Operazioni di login/logout"
  - name: "richieste-soccorso"
    description: "Gestione richieste di soccorso"
  - name: "operatori"
    description: "Gestione operatori"
  - name: "missioni"
    description: "Gestione delle missioni"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: "admin"
        password:
          type: string
          example: "password123"

    AuthResponse:
      type: object
      properties:
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        utente:
          $ref: '#/components/schemas/Utente'
        message:
          type: string
          example: "Login effettuato con successo"

    Utente:
      type: object
      properties:
        id:
          type: integer
          example: 1
        username:
          type: string
          example: "admin"
        ruolo:
          type: string
          enum: [ADMIN, OPERATORE]
          example: "ADMIN"

    RichiestaSoccorso:
      type: object
      properties:
        id:
          type: integer
          example: 1
        descrizione:
          type: string
          example: "Incidente stradale sulla SS17"
        indirizzo:
          type: string
          example: "Via Roma 123, L'Aquila"
        telefono:
          type: string
          example: "+39 123 456 7890"
        email:
          type: string
          example: "soccorso@example.com"
        stato:
          type: string
          enum: [ATTIVA, IN_CORSO, CHIUSA, IGNORATA]
          example: "ATTIVA"
        livelloSuccesso:
          type: integer
          minimum: 1
          maximum: 5
          example: 4
        dataCreazione:
          type: string
          format: date-time
          example: "2024-12-06T10:30:00Z"
        operatoreId:
          type: integer
          example: 1

    NuovaRichiestaSoccorso:
      type: object
      required:
        - descrizione
        - indirizzo
        - telefono
      properties:
        descrizione:
          type: string
          example: "Incidente stradale sulla SS17"
        indirizzo:
          type: string
          example: "Via Roma 123, L'Aquila"
        telefono:
          type: string
          example: "+39 123 456 7890"
        email:
          type: string
          example: "soccorso@example.com"

    Operatore:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nome:
          type: string
          example: "Mario"
        cognome:
          type: string
          example: "Rossi"
        specializzazione:
          type: string
          example: "Primo Soccorso"
        stato:
          type: string
          enum: [LIBERO, OCCUPATO]
          example: "LIBERO"

    Missione:
      type: object
      properties:
        id:
          type: integer
          example: 1
        descrizione:
          type: string
          example: "Missione di soccorso per incidente stradale"
        stato:
          type: string
          enum: [IN_CORSO, COMPLETATA, ANNULLATA]
          example: "IN_CORSO"
        dataInizio:
          type: string
          format: date-time
          example: "2024-12-06T11:00:00Z"
        dataFine:
          type: string
          format: date-time
          example: "2024-12-06T12:30:00Z"
        operatoreId:
          type: integer
          example: 1
        richiestaSoccorsoId:
          type: integer
          example: 1

    NuovaMissione:
      type: object
      required:
        - descrizione
        - operatoreId
        - richiestaSoccorsoId
      properties:
        descrizione:
          type: string
          example: "Missione di soccorso per incidente stradale"
        operatoreId:
          type: integer
          example: 1
        richiestaSoccorsoId:
          type: integer
          example: 1

    MessageResponse:
      type: object
      properties:
        message:
          type: string
          example: "Operazione completata con successo"

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Errore nella richiesta"
        details:
          type: string
          example: "Descrizione dettagliata dell'errore"

paths:
  /auth/login:
    post:
      tags:
        - autenticazione
      summary: "Effettua il login"
      description: "Autentica un utente e restituisce un token di accesso"
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: "Login effettuato con successo"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: "Credenziali non valide"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/logout:
    post:
      tags:
        - autenticazione
      summary: "Effettua il logout"
      description: "Invalida il token di accesso corrente"
      operationId: logout
      security:
        - BearerAuth: []
      responses:
        '200':
          description: "Logout effettuato con successo"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '401':
          description: "Token non valido"

  /richieste-soccorso:
    post:
      tags:
        - richieste-soccorso
      summary: "Inserisce una nuova richiesta di soccorso"
      description: "Crea una nuova richiesta di soccorso nel sistema"
      operationId: creaRichiestaSoccorso
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NuovaRichiestaSoccorso'
      responses:
        '201':
          description: "Richiesta inserita con successo"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RichiestaSoccorso'
        '400':
          description: "Dati richiesta non validi"
        '401':
          description: "Non autorizzato"

    get:
      tags:
        - richieste-soccorso
      summary: "Lista delle richieste di soccorso con paginazione"
      description: "Ottiene la lista paginata delle richieste filtrata per stato"
      operationId: listaRichiesteSoccorso
      security:
        - BearerAuth: []
      parameters:
        - name: stato
          in: query
          description: "Filtra per stato della richiesta"
          required: false
          schema:
            type: string
            enum: [ATTIVA, IN_CORSO, CHIUSA, IGNORATA]
        - name: page
          in: query
          description: "Numero di pagina (0-based)"
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: size
          in: query
          description: "Dimensione della pagina"
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
      responses:
        '200':
          description: "Lista delle richieste"
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/RichiestaSoccorso'
                  page:
                    type: integer
                  size:
                    type: integer
                  totalElements:
                    type: integer
                  totalPages:
                    type: integer
        '401':
          description: "Non autorizzato"

  /richieste-soccorso/fallimentari:
    get:
      tags:
        - richieste-soccorso
      summary: "Lista delle richieste chiuse con successo < 5"
      description: "Ottiene le richieste chiuse con livello di successo minore di 5"
      operationId: listaRichiesteFailmentari
      security:
        - BearerAuth: []
      responses:
        '200':
          description: "Lista delle richieste fallimentari"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RichiestaSoccorso'
        '401':
          description: "Non autorizzato"

  /richieste-soccorso/{id}:
    get:
      tags:
        - richieste-soccorso
      summary: "Dettagli di una richiesta di soccorso"
      description: "Ottiene i dettagli di una specifica richiesta"
      operationId: dettagliRichiestaSoccorso
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "ID della richiesta"
          schema:
            type: integer
      responses:
        '200':
          description: "Dettagli della richiesta"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RichiestaSoccorso'
        '404':
          description: "Richiesta non trovata"
        '401':
          description: "Non autorizzato"

    delete:
      tags:
        - richieste-soccorso
      summary: "Annulla una richiesta di soccorso"
      description: "Annulla una richiesta (solo amministratore)"
      operationId: annullaRichiestaSoccorso
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "ID della richiesta da annullare"
          schema:
            type: integer
      responses:
        '200':
          description: "Richiesta annullata con successo"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: "Richiesta non annullabile"
        '404':
          description: "Richiesta non trovata"
        '401':
          description: "Non autorizzato"
        '403':
          description: "Operazione consentita solo agli amministratori"

  /richieste-soccorso/{id}/convalida:
    put:
      tags:
        - richieste-soccorso
      summary: "Convalida una richiesta di soccorso"
      description: "Convalida una richiesta tramite link di conferma"
      operationId: convalidaRichiestaSoccorso
      parameters:
        - name: id
          in: path
          required: true
          description: "ID della richiesta da convalidare"
          schema:
            type: integer
      responses:
        '200':
          description: "Richiesta convalidata con successo"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: "Richiesta già convalidata"
        '404':
          description: "Richiesta non trovata"

  /operatori/liberi:
    get:
      tags:
        - operatori
      summary: "Lista degli operatori attualmente liberi"
      description: "Ottiene la lista degli operatori disponibili per nuove missioni"
      operationId: listaOperatoriLiberi
      security:
        - BearerAuth: []
      responses:
        '200':
          description: "Lista degli operatori liberi"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Operatore'
        '401':
          description: "Non autorizzato"

  /operatori/{id}:
    get:
      tags:
        - operatori
      summary: "Dettagli di un operatore"
      description: "Ottiene i dettagli di uno specifico operatore"
      operationId: dettagliOperatore
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "ID dell'operatore"
          schema:
            type: integer
      responses:
        '200':
          description: "Dettagli dell'operatore"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operatore'
        '404':
          description: "Operatore non trovato"
        '401':
          description: "Non autorizzato"

  /operatori/{id}/missioni:
    get:
      tags:
        - operatori
      summary: "Lista delle missioni di un operatore"
      description: "Ottiene tutte le missioni in cui l'operatore è stato coinvolto"
      operationId: missioniOperatore
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "ID dell'operatore"
          schema:
            type: integer
      responses:
        '200':
          description: "Lista delle missioni"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Missione'
        '404':
          description: "Operatore non trovato"
        '401':
          description: "Non autorizzato"

  /missioni:
    post:
      tags:
        - missioni
      summary: "Crea una nuova missione"
      description: "Crea una nuova missione assegnandola a un operatore"
      operationId: creaMissione
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NuovaMissione'
      responses:
        '201':
          description: "Missione creata con successo"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Missione'
        '400':
          description: "Dati missione non validi"
        '401':
          description: "Non autorizzato"

  /missioni/{id}:
    get:
      tags:
        - missioni
      summary: "Dettagli di una missione"
      description: "Ottiene i dettagli di una specifica missione"
      operationId: dettagliMissione
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "ID della missione"
          schema:
            type: integer
      responses:
        '200':
          description: "Dettagli della missione"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Missione'
        '404':
          description: "Missione non trovata"
        '401':
          description: "Non autorizzato"

  /missioni/{id}/chiudi:
    put:
      tags:
        - missioni
      summary: "Chiude una missione in corso"
      description: "Marca una missione come completata"
      operationId: chiudiMissione
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "ID della missione da chiudere"
          schema:
            type: integer
      responses:
        '200':
          description: "Missione chiusa con successo"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Missione'
        '400':
          description: "Missione già chiusa"
        '404':
          description: "Missione non trovata"
        '401':
          description: "Non autorizzato"